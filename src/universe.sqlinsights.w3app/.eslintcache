[{"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceListener.js":"1","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceDispatcher.js":"2","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceStore.js":"3","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\index.js":"4","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceActions.js":"5","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Shared\\ActionKeyPathUi.js":"6","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Helper.js":"7","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionList.js":"8","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DocumentVisibilityStore.js":"9","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\App.js":"10","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionsTab.js":"11","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionGroupsList.js":"12","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Sessions\\NewSessionButton.js":"13","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\index.js":"14","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Helper.js":"15","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionGroupsList.js":"16","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Shared\\ActionKeyPathUi.js":"17","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DocumentVisibilityStore.js":"18","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceActions.js":"19","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceListener.js":"20","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceStore.js":"21","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Sessions\\NewSessionButton.js":"22","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Shared\\NavTabs.js":"23","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionsTab.js":"24","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceDispatcher.js":"25","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionList.js":"26","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\App.js":"27"},{"size":1965,"mtime":1633022012686,"results":"28","hashOfConfig":"29"},{"size":73,"mtime":1609668142844,"results":"30","hashOfConfig":"31"},{"size":1310,"mtime":1609673396507,"results":"32","hashOfConfig":"31"},{"size":500,"mtime":1609615045656,"results":"33","hashOfConfig":"31"},{"size":547,"mtime":1614444627911,"results":"34","hashOfConfig":"29"},{"size":182,"mtime":1609778154645,"results":"35","hashOfConfig":"31"},{"size":1067,"mtime":1613606764585,"results":"36","hashOfConfig":"31"},{"size":14339,"mtime":1614444627896,"results":"37","hashOfConfig":"29"},{"size":896,"mtime":1611172885961,"results":"38","hashOfConfig":"31"},{"size":370,"mtime":1614444627903,"results":"39","hashOfConfig":"29"},{"size":903,"mtime":1613711855815,"results":"40","hashOfConfig":"31"},{"size":12158,"mtime":1614444627879,"results":"41","hashOfConfig":"29"},{"size":1830,"mtime":1633022012668,"results":"42","hashOfConfig":"29"},{"size":517,"mtime":1649686596226,"results":"43","hashOfConfig":"44"},{"size":1067,"mtime":1649686596224,"results":"45","hashOfConfig":"44"},{"size":12158,"mtime":1649686596223,"results":"46","hashOfConfig":"44"},{"size":182,"mtime":1649686596225,"results":"47","hashOfConfig":"44"},{"size":897,"mtime":1676845658419,"results":"48","hashOfConfig":"44"},{"size":547,"mtime":1676846483377,"results":"49","hashOfConfig":"44"},{"size":1965,"mtime":1649686596227,"results":"50","hashOfConfig":"44"},{"size":1310,"mtime":1649686596227,"results":"51","hashOfConfig":"44"},{"size":1830,"mtime":1649686596225,"results":"52","hashOfConfig":"44"},{"size":2913,"mtime":1649686596226,"results":"53","hashOfConfig":"44"},{"size":903,"mtime":1649686596223,"results":"54","hashOfConfig":"44"},{"size":73,"mtime":1649686596227,"results":"55","hashOfConfig":"44"},{"size":14339,"mtime":1649686596223,"results":"56","hashOfConfig":"44"},{"size":370,"mtime":1649686596224,"results":"57","hashOfConfig":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"61"},"10h34xe",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64"},"dwfas7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"14mmldt",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"103","usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"90","usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceListener.js",["131","132"],"ï»¿import * as Helper from \"../Helper\"\r\nimport * as DataSourceActions from './DataSourceActions'\r\nimport DataSourceStore from \"./DataSourceStore\";\r\n\r\n// export const API_URL=\"http://localhost:8776/SqlInsights\";\r\nexport const API_URL=\"http://localhost:50420/api/v1/SqlInsights\";\r\n// export const API_URL=\"http://localhost:56111/AppInsight\"\r\n\r\nclass DataSourceListener {\r\n\r\n    constructor() {\r\n        this.watchdogTick = this.watchdogTick.bind(this);\r\n        this.timerId = setInterval(this.watchdogTick, 1000);\r\n        \r\n        setTimeout(this.watchdogTick);\r\n    }\r\n\r\n    watchdogTick() {\r\n        const req = Helper.createRequest('Summary', {IdSession: 0, AppName: null, HostId: null});\r\n        let apiUrl = `${API_URL}/Summary`;\r\n        try {\r\n            fetch(req)\r\n                .then(response => {\r\n                    // console.log(`Response.Status for ${apiUrl} obtained: ${response.status}`);\r\n                    // console.log(response);\r\n                    // console.log(response.body);\r\n                    return response.ok ? response.json() : {error: response.status, details: response.json()}\r\n                })\r\n                .then(dataSource => {\r\n                    DataSourceListener.TransformOnLoad(dataSource);\r\n                    DataSourceActions.DataSourceUpdated(dataSource);\r\n                    // console.log(\"DATA SOURCE RETRIEVED\", dataSource);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                    // DataSourceActions.ConnectionStatusUpdated(false);\r\n                });\r\n        } catch (err) {\r\n            console.error(`FETCH failed for ${apiUrl}. ${err}`);\r\n        }\r\n    }\r\n    \r\n    static TransformOnLoad(dataSource) {\r\n        dataSource.forEach(action => {\r\n            action.KeyString = action.Key.Path.join(\" \\u2192 \");\r\n        })\r\n    }\r\n}\r\n\r\nconst dataSourceListener = new DataSourceListener();\r\nexport default dataSourceListener;\r\n",["133","134"],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceDispatcher.js",["135"],"ï»¿import {Dispatcher} from \"flux\";\r\n\r\nexport default new Dispatcher();\r\n","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceStore.js",["136"],"ï»¿import dispatcher from \"./DataSourceDispatcher\";\r\nimport {EventEmitter} from \"events\";\r\nimport * as DataSourceActions from \"./DataSourceActions\";\r\n\r\nclass DataSourceStore extends EventEmitter {\r\n\r\n    constructor() {\r\n        super();\r\n        // local copy per message\r\n        this.activeDataSource = {kind: 'empty'};\r\n        this.connectionStatus = false;\r\n    }\r\n\r\n    // single handler for the app for each kind of message\r\n    handleActions(action) {\r\n        switch (action.type) {\r\n            // a cast per message\r\n            case DataSourceActions.DATA_SOURCE_UPDATED_ACTION: {\r\n                this.activeDataSource = action.value;\r\n                this.connectionStatus = true;\r\n                this.emit(\"storeUpdated\");\r\n                break;\r\n            }\r\n            case DataSourceActions.CONNECTION_STATUS_UPDATED_ACTION: {\r\n                this.connectionStatus = action.value;\r\n                this.emit(\"storeUpdated\");\r\n                break;\r\n            }\r\n            default: {\r\n            }\r\n        }\r\n    }\r\n\r\n    // a method per message\r\n    getDataSource() {\r\n        return this.activeDataSource;\r\n    }\r\n\r\n}\r\n\r\nconst dataSourceStore = new DataSourceStore();\r\ndispatcher.register(dataSourceStore.handleActions.bind(dataSourceStore));\r\nexport default dataSourceStore;\r\n",["137","138"],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\index.js",[],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceActions.js",["139"],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Shared\\ActionKeyPathUi.js",["140"],"ï»¿\r\nexport function ActionKeyPathUi({path}) {\r\n    // return JoinString(\" \\u2192 \", path);\r\n    // console.log('ARG PATH: ', path);\r\n    return path ? path.join(\" \\u2192 \") : \"\";\r\n}","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Helper.js",["141"],"ï»¿import {API_URL} from \"./stores/DataSourceListener\";\r\n\r\nexport const toConsole = function(caption, obj) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        console.log(`%c--===**** ${caption} ****===--`, \"color: #37603E\", obj);\r\n    }\r\n}\r\n\r\nexport const isDocumentHidden = () => {\r\n    // https://www.w3.org/TR/page-visibility-2/#idl-def-document-visibilitystate\r\n    let isHidden = false;\r\n    if (document && document.visibilityState && document.visibilityState !== 'visible') { isHidden = true; }\r\n    return isHidden;\r\n}\r\n\r\n\r\nexport const keyPathSeparator = {\r\n    char: 'â',\r\n    code: 0x2192\r\n};\r\n\r\nexport function createRequest(action, body) {\r\n    return new Request(`${API_URL}/${action}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\r\n        /*\r\n                    mode: 'cors',\r\n        headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' }, \r\n                    redirect: 'follow', \r\n        */\r\n        body: JSON.stringify(body)\r\n    });\r\n}\r\n","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionList.js",["142","143","144","145","146","147"],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DocumentVisibilityStore.js",["148"],"ï»¿import * as Helper from \"../Helper\"\r\n\r\nconst listeners = [];\r\n\r\nexport const on = listener => {\r\n    listeners.push(listener);\r\n}\r\n\r\nexport const off = listener => {\r\n    var index = listeners.indexOf(listener);\r\n    if (index !== -1) {\r\n        listeners.splice(index, 1);\r\n    }    \r\n}\r\n\r\nconst notifyAll = isVisible => {\r\n    listeners.forEach(listener => {\r\n        if (listener) listener(isVisible);\r\n    });\r\n}\r\n\r\nif (document && document.visibilityState && typeof document.onvisibilitychange !== undefined) {\r\n    console.log(\"SUBRIBING to [visibilitychange]\");\r\n    document.addEventListener(\"visibilitychange\", () => {\r\n        const isHidden = Helper.isDocumentHidden();\r\n        console.log(`VISIBLILITY: ${!isHidden}, ${document.visibilityState}`);\r\n        notifyAll(!isHidden);\r\n    }, false);\r\n}\r\nelse {\r\n    console.warn(\"Unable to SUBRIBE to document[visibilitychange]\");\r\n}\r\n","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\App.js",["149","150"],"import 'babel-polyfill';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport NavTabs from \"./Shared/NavTabs\";\r\nimport dataSourceListener from \"./stores/DataSourceListener\";\r\n\r\nrequire('typeface-roboto')\r\nrequire('es6-promise').polyfill();\r\nrequire('isomorphic-fetch');\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <NavTabs />\r\n    );\r\n}\r\n\r\nexport default App;\r\n",["151","152"],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionsTab.js",["153","154"],"ï»¿import React, {Component} from \"react\";\r\nimport ActionGroupsList from \"./ActionGroupsList\";\r\nimport ActionList from \"./ActionList\";\r\nimport NewSessionButton from \"../Sessions/NewSessionButton\";\r\n\r\nexport default class ActionsTab extends Component {\r\n    static displayName = ActionsTab.name;\r\n    \r\n    state = {\r\n        selectedAction: null,\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n    \r\n    render() {\r\n        \r\n        const onActionSelected = action => {\r\n            this.setState({selectedAction: action});\r\n        }\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <NewSessionButton />\r\n                <ActionGroupsList onActionSelected={onActionSelected}/>\r\n                <ActionList keyPath={this.state.selectedAction ? this.state.selectedAction.Key.Path : null} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionGroupsList.js",["155","156","157","158"],"U:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Sessions\\NewSessionButton.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\index.js",[],["175","176"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Helper.js",["177"],["178","179"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionGroupsList.js",["180","181","182","183"],"ï»¿import * as Helper from \"../Helper\"\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\n\r\nimport dataSourceStore from \"../stores/DataSourceStore\";\r\nimport {ActionKeyPathUi} from \"../Shared/ActionKeyPathUi\";\r\nimport ActionList from \"./ActionList\";\r\nimport * as DocumentVisibilityStore from \"../stores/DocumentVisibilityStore\";\r\n\r\nconst noDataProps = {style:{color:\"gray\", marginTop:30, border: \"1px solid grey\"}};\r\n\r\nexport default class ActionGroupsList extends Component {\r\n    static displayName = ActionGroupsList.name;\r\n\r\n    static propTypes = {\r\n        onActionSelected: PropTypes.func\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.updateDataSource = this.updateDataSource.bind(this);\r\n        this.handleVisibility = this.handleVisibility.bind(this);\r\n\r\n        this.state = {\r\n            actions: null,\r\n            selected: null,\r\n            selectedRow: null,\r\n            kind: 'total', // or 'average'\r\n            sorting: [{id: \"AppDuration\", desc: true}],\r\n        };\r\n    }\r\n    \r\n    handleVisibility(isVisible) {\r\n        Helper.toConsole(`handleVisibility(${isVisible})`);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        let x = dataSourceStore.on('storeUpdated', this.updateDataSource);\r\n        DocumentVisibilityStore.on(this.handleVisibility);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        dataSourceStore.off('storeUpdated', this.updateDataSource);\r\n    }\r\n\r\n    updateDataSource() {\r\n        this.setState({actions: dataSourceStore.getDataSource()});\r\n    }\r\n    \r\n    render() {\r\n        const isLoaded = this.state.actions !== null;\r\n        const actions = this.state.actions === null ? [] : this.state.actions;\r\n        Helper.toConsole(`Rendering TOTAL ACTION GROUPS`, actions.length);\r\n        const handleChangeKind = (event) => {\r\n            this.setState({kind: event.target.value})\r\n        };\r\n\r\n        const onSortedChange = (newSorted, column, shiftKey) => {\r\n            // const defaultSorting = [{ id: 'totalCpuUsage_PerCents', desc: true }]\r\n            const id = newSorted[0].id;\r\n            const descDirection = id !== \"KeyString\";\r\n            const newSorting = [{ id: id, desc: descDirection }];\r\n            this.setState({sorting:newSorting});\r\n        };\r\n\r\n        let pageSize = actions.length === 0 ? 9 : Math.max(actions.length, 1);\r\n        \r\n        // const cellKeyPath = row => (<span><ActionKeyPathUi path={row.original.Key.Path} /></span>);\r\n        const cellKeyPath = row => row.original.KeyString;\r\n        \r\n        const formatNumber = time => {\r\n            let ret = time.toLocaleString(undefined, { minimumFractionDigits: 0, maximumFractionDigits: time < 0 ? 0 : time < 100 ? 2 : (time < 1000 ? 1 : 0) });\r\n            return ret === \"0\" ? \"\" : ret;\r\n        };\r\n        \r\n        const isAverage = this.state.kind === \"average\";\r\n        const getCellValue = (rowData, accessor) => {\r\n            let total = accessor(rowData);\r\n            return isAverage ? total / rowData.Count : total;\r\n        };\r\n        const cellNumber = accessor => row => (<span>{formatNumber(getCellValue(row.original, accessor))}</span>);\r\n        const cellTotalErrors = row => formatNumber(row.original.RequestErrors);\r\n        \r\n\r\n        const selectedRowHandler = (state, rowInfo, column) => {\r\n            if (rowInfo && rowInfo.row) {\r\n                return {\r\n                    onClick: (e) => {\r\n                        const selectedRow = rowInfo.original;\r\n                        this.setState({\r\n                            selected: rowInfo.index,\r\n                            selectedRow: selectedRow,\r\n                        });\r\n                        Helper.toConsole(\"Action Selected\", selectedRow);\r\n                        if (this.props.onActionSelected)\r\n                            this.props.onActionSelected(selectedRow);\r\n                    },\r\n                    style: {\r\n                        background: rowInfo.index === this.state.selected ? '#4f9a94' : 'white',\r\n                        color: rowInfo.index === this.state.selected ? 'white' : 'black',\r\n                        cursor: \"pointer\",\r\n                    }\r\n                }\r\n            } else {\r\n                return {}\r\n            }\r\n        }\r\n        \r\n        const defaultMetricColumnWidth = 90;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                    <RadioGroup row aria-label=\"kind\" name=\"kind\" value={this.state.kind} onChange={handleChangeKind} className='center-aligned'>\r\n                        <div style={{textAlign: 'center', width: '100%'}}>\r\n                        <FormControlLabel control={<null />} label=\"Display:\" />\r\n                        <FormControlLabel value=\"average\" control={<Radio />} label=\"Average\" />\r\n                        <FormControlLabel value=\"total\" control={<Radio />} label=\"Total\" />\r\n                        </div>\r\n                    </RadioGroup>\r\n                <ReactTable\r\n                    data={actions}\r\n                    sorted={this.state.sorting}\r\n                    onSortedChange={onSortedChange}\r\n                    getTrProps={selectedRowHandler}\r\n                    showPagination={false}\r\n                    defaultPageSize={pageSize}\r\n                    pageSizeOptions={[pageSize]}\r\n                    pageSize={pageSize}\r\n                    noDataText={isLoaded ? \"no actions triggered\" : \"waiting for cells\"}\r\n                    getNoDataProps={() => noDataProps}\r\n                    className=\"-striped -highlight\"\r\n                    columns={\r\n                        [\r\n                            {\r\n                                Header: \"\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Http Endpoints & Background Tasks\",\r\n                                        accessor: \"KeyString\",\r\n                                        minWidth: 540,\r\n                                        Cell: cellKeyPath,\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                Header: \"App Side\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Count\",\r\n                                        accessor: \"Count\",\r\n                                        className: 'right-aligned',\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"Errors\",\r\n                                        accessor: \"RequestErrors\",\r\n                                        className: 'right-aligned',\r\n                                        width: defaultMetricColumnWidth,\r\n                                        Cell: cellTotalErrors\r\n                                    },\r\n                                    {\r\n                                        Header: \"Duration\",\r\n                                        accessor: \"AppDuration\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.AppDuration),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"CPU\",\r\n                                        id: \"cpuUsageTotal\",\r\n                                        accessor: x => x.AppKernelUsage + x.AppUserUsage,\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.AppKernelUsage + x.AppUserUsage),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"Kernel CPU\",\r\n                                        accessor: \"AppKernelUsage\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.AppKernelUsage),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"User CPU\",\r\n                                        accessor: \"AppUserUsage\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.AppUserUsage),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                ]\r\n                            },\r\n                            {\r\n                                Header: \"SQL Side\",\r\n                                columns: [\r\n                                    {\r\n                                        Header: \"Commands\",\r\n                                        accessor: \"SqlCounters.Requests\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.SqlCounters.Requests),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"Errors\",\r\n                                        accessor: \"SqlErrors\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.SqlErrors), // TODO: More precision for avg\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"Duration\",\r\n                                        accessor: \"SqlCounters.Duration\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.SqlCounters.Duration),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"CPU\",\r\n                                        accessor: \"SqlCounters.CPU\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.SqlCounters.CPU),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"Reads\",\r\n                                        accessor: \"SqlCounters.Reads\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.SqlCounters.Reads),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                    {\r\n                                        Header: \"Writes\",\r\n                                        accessor: \"SqlCounters.Writes\",\r\n                                        className: 'right-aligned',\r\n                                        Cell: cellNumber(x => x.SqlCounters.Writes),\r\n                                        width: defaultMetricColumnWidth,\r\n                                    },\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                />\r\n                \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}   ","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Shared\\ActionKeyPathUi.js",["184"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DocumentVisibilityStore.js",["185"],"ï»¿import * as Helper from \"../Helper\"\r\n\r\nconst listeners = [];\r\n\r\nexport const on = listener => {\r\n    listeners.push(listener);\r\n}\r\n\r\nexport const off = listener => {\r\n    var index = listeners.indexOf(listener);\r\n    if (index !== -1) {\r\n        listeners.splice(index, 1);\r\n    }    \r\n}\r\n\r\nconst notifyAll = isVisible => {\r\n    listeners.forEach(listener => {\r\n        if (listener) listener(isVisible);\r\n    });\r\n}\r\n\r\nif (document && document.visibilityState && typeof document.onvisibilitychange !== undefined) {\r\n    console.log(\"SUBRIBING to [visibilitychange]\");\r\n    document.addEventListener(\"visibilitychange\", () => {\r\n        const isHidden = Helper.isDocumentHidden();\r\n        console.log(`VISIBLILITY: ${!isHidden}, ${document.visibilityState}`);\r\n        notifyAll(!isHidden);\r\n    }, false);\r\n}\r\nelse {\r\n    console.warn(\"Unable to SUBSRIBE to document[visibilitychange]\");\r\n}\r\n","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceActions.js",["186"],"ï»¿import dispatcher from \"./DataSourceDispatcher\";\r\n\r\nexport const DATA_SOURCE_UPDATED_ACTION = \"DATA_SOURCE_UPDATED_ACTION\";\r\nexport const CONNECTION_STATUS_UPDATED_ACTION = \"CONNECTION_STATUS_UPDATED_ACTION\";\r\n\r\nexport function DataSourceUpdated(dataSource) {\r\n    dispatcher.dispatch({\r\n        type: DATA_SOURCE_UPDATED_ACTION,\r\n        value: dataSource\r\n    })\r\n}\r\n\r\nexport function ConnectionStatusUpdated(isConnected) {\r\n    dispatcher.dispatch({\r\n        type: CONNECTION_STATUS_UPDATED_ACTION,\r\n        value: isConnected\r\n    })\r\n}\r\n\r\n","C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceListener.js",["187","188"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceStore.js",["189"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Sessions\\NewSessionButton.js",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Shared\\NavTabs.js",["206","207"],"ï»¿import React, {useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport ActionGroupsList from \"../Actions/ActionGroupsList\";\r\nimport ActionsTab from \"../Actions/ActionsTab\";\r\nimport * as DocumentVisibilityStore from \"../stores/DocumentVisibilityStore\"\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\nconst tabPanelStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: 4,\r\n    },\r\n}));\r\n\r\nlet refAll;\r\n\r\nDocumentVisibilityStore.on(isVisible => {\r\n    if (refAll && refAll.current) {\r\n        console.log(\"refAll\", refAll);\r\n        // refAll.current.style.opacity = isVisible ? 1 : 0.5;\r\n    }\r\n});\r\n\r\nexport default function SimpleTabs() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    \r\n    refAll = useRef();\r\n\r\n    return (\r\n        \r\n        <div className={classes.root} ref={refAll}>\r\n            <AppBar position=\"static\" className=\"XXXXX\">\r\n                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Endpoints & Tasks\" {...a11yProps(0)} />\r\n                    <Tab label=\"Errors\" {...a11yProps(1)} />\r\n                    <Tab label=\"About\" {...a11yProps(2)}  />\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0} className={tabPanelStyles.root}>\r\n                <ActionsTab />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                Item Two\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                Item Three\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n",["208","209"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionsTab.js",["210","211"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\stores\\DataSourceDispatcher.js",["212"],["213","214"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\Actions\\ActionList.js",["215","216","217","218","219","220"],"C:\\_GIT\\Universe.SqlInsights\\src\\universe.sqlinsights.w3app\\src\\App.js",["221","222"],{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"227"},{"ruleId":"228","severity":1,"message":"229","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":23},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"236"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"237"},{"ruleId":"232","replacedBy":"238"},{"ruleId":"234","replacedBy":"239"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"240"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"241"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"242"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"243"},{"ruleId":"228","severity":1,"message":"244","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":23},{"ruleId":"228","severity":1,"message":"245","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":13},{"ruleId":"228","severity":1,"message":"246","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"247","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},{"ruleId":"228","severity":1,"message":"248","line":38,"column":7,"nodeType":"230","messageId":"231","endLine":38,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"249"},{"ruleId":"228","severity":1,"message":"250","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":12},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":26},{"ruleId":"232","replacedBy":"252"},{"ruleId":"234","replacedBy":"253"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"254"},{"ruleId":"255","severity":1,"message":"256","line":13,"column":5,"nodeType":"257","messageId":"258","endLine":16,"endColumn":6},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"259"},{"ruleId":"228","severity":1,"message":"260","line":11,"column":9,"nodeType":"230","messageId":"231","endLine":11,"endColumn":24},{"ruleId":"228","severity":1,"message":"261","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":18},{"ruleId":"228","severity":1,"message":"262","line":45,"column":13,"nodeType":"230","messageId":"231","endLine":45,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"263"},{"ruleId":"228","severity":1,"message":"264","line":1,"column":13,"nodeType":"230","messageId":"231","endLine":1,"endColumn":19},{"ruleId":"228","severity":1,"message":"265","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"244","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":23},{"ruleId":"228","severity":1,"message":"260","line":7,"column":9,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},{"ruleId":"228","severity":1,"message":"245","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":13},{"ruleId":"228","severity":1,"message":"246","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":18},{"ruleId":"228","severity":1,"message":"247","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":24},{"ruleId":"228","severity":1,"message":"266","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":18},{"ruleId":"228","severity":1,"message":"267","line":13,"column":9,"nodeType":"230","messageId":"231","endLine":13,"endColumn":16},{"ruleId":"228","severity":1,"message":"268","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":14},{"ruleId":"228","severity":1,"message":"269","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":18},{"ruleId":"228","severity":1,"message":"270","line":18,"column":8,"nodeType":"230","messageId":"231","endLine":18,"endColumn":16},{"ruleId":"228","severity":1,"message":"271","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":16},{"ruleId":"228","severity":1,"message":"272","line":21,"column":8,"nodeType":"230","messageId":"231","endLine":21,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":37,"column":5,"nodeType":"257","messageId":"258","endLine":39,"endColumn":6},{"ruleId":"232","replacedBy":"273"},{"ruleId":"234","replacedBy":"274"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"275"},{"ruleId":"232","replacedBy":"276"},{"ruleId":"234","replacedBy":"277"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"278"},{"ruleId":"228","severity":1,"message":"260","line":11,"column":9,"nodeType":"230","messageId":"231","endLine":11,"endColumn":24},{"ruleId":"228","severity":1,"message":"261","line":12,"column":8,"nodeType":"230","messageId":"231","endLine":12,"endColumn":18},{"ruleId":"228","severity":1,"message":"262","line":45,"column":13,"nodeType":"230","messageId":"231","endLine":45,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"279"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"280"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"281"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"282"},{"ruleId":"228","severity":1,"message":"229","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"283"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"284"},{"ruleId":"228","severity":1,"message":"264","line":1,"column":13,"nodeType":"230","messageId":"231","endLine":1,"endColumn":19},{"ruleId":"228","severity":1,"message":"265","line":4,"column":8,"nodeType":"230","messageId":"231","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"244","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":23},{"ruleId":"228","severity":1,"message":"260","line":7,"column":9,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},{"ruleId":"228","severity":1,"message":"245","line":8,"column":8,"nodeType":"230","messageId":"231","endLine":8,"endColumn":13},{"ruleId":"228","severity":1,"message":"246","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":18},{"ruleId":"228","severity":1,"message":"247","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":24},{"ruleId":"228","severity":1,"message":"266","line":11,"column":8,"nodeType":"230","messageId":"231","endLine":11,"endColumn":18},{"ruleId":"228","severity":1,"message":"267","line":13,"column":9,"nodeType":"230","messageId":"231","endLine":13,"endColumn":16},{"ruleId":"228","severity":1,"message":"268","line":14,"column":8,"nodeType":"230","messageId":"231","endLine":14,"endColumn":14},{"ruleId":"228","severity":1,"message":"269","line":16,"column":8,"nodeType":"230","messageId":"231","endLine":16,"endColumn":18},{"ruleId":"228","severity":1,"message":"270","line":18,"column":8,"nodeType":"230","messageId":"231","endLine":18,"endColumn":16},{"ruleId":"228","severity":1,"message":"271","line":19,"column":8,"nodeType":"230","messageId":"231","endLine":19,"endColumn":16},{"ruleId":"228","severity":1,"message":"272","line":21,"column":8,"nodeType":"230","messageId":"231","endLine":21,"endColumn":12},{"ruleId":"255","severity":1,"message":"256","line":37,"column":5,"nodeType":"257","messageId":"258","endLine":39,"endColumn":6},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"285"},{"ruleId":"228","severity":1,"message":"286","line":9,"column":8,"nodeType":"230","messageId":"231","endLine":9,"endColumn":24},{"ruleId":"232","replacedBy":"287"},{"ruleId":"234","replacedBy":"288"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"289"},{"ruleId":"255","severity":1,"message":"256","line":13,"column":5,"nodeType":"257","messageId":"258","endLine":16,"endColumn":6},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"290"},{"ruleId":"232","replacedBy":"291"},{"ruleId":"234","replacedBy":"292"},{"ruleId":"223","severity":1,"message":"224","line":1,"column":1,"nodeType":"225","messageId":"226","fix":"293"},{"ruleId":"228","severity":1,"message":"244","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":23},{"ruleId":"228","severity":1,"message":"245","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":13},{"ruleId":"228","severity":1,"message":"246","line":6,"column":8,"nodeType":"230","messageId":"231","endLine":6,"endColumn":18},{"ruleId":"228","severity":1,"message":"247","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":24},{"ruleId":"228","severity":1,"message":"248","line":38,"column":7,"nodeType":"230","messageId":"231","endLine":38,"endColumn":16},{"ruleId":"228","severity":1,"message":"250","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":12},{"ruleId":"228","severity":1,"message":"251","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":26},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"294","text":"295"},"no-unused-vars","'DataSourceStore' is defined but never used.","Identifier","unusedVar","no-native-reassign",["296"],"no-negated-in-lhs",["297"],{"range":"298","text":"295"},{"range":"299","text":"295"},["296"],["297"],{"range":"300","text":"295"},{"range":"301","text":"295"},{"range":"302","text":"295"},{"range":"303","text":"295"},"'dataSourceStore' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'useStyles' is assigned a value but never used.",{"range":"304","text":"295"},"'logo' is defined but never used.","'dataSourceListener' is defined but never used.",["296"],["297"],{"range":"305","text":"295"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",{"range":"306","text":"295"},"'ActionKeyPathUi' is defined but never used.","'ActionList' is defined but never used.","'x' is assigned a value but never used.",{"range":"307","text":"295"},"'Helper' is defined but never used.","'SaveIcon' is defined but never used.","'ReactTable' is defined but never used.","'API_URL' is defined but never used.","'moment' is defined but never used.","'IconButton' is defined but never used.","'Snackbar' is defined but never used.","'MuiAlert' is defined but never used.","'copy' is defined but never used.",["296"],["297"],{"range":"308","text":"295"},["296"],["297"],{"range":"309","text":"295"},{"range":"310","text":"295"},{"range":"311","text":"295"},{"range":"312","text":"295"},{"range":"313","text":"295"},{"range":"314","text":"295"},{"range":"315","text":"295"},{"range":"316","text":"295"},"'ActionGroupsList' is defined but never used.",["296"],["297"],{"range":"317","text":"295"},{"range":"318","text":"295"},["296"],["297"],{"range":"319","text":"295"},[-1,0],"","no-global-assign","no-unsafe-negation",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]