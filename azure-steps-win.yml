# AGENT_OS=Linux|Darwin|Windows_NT
# condition: eq(variables['Agent.OS'], 'Linux|Darwin|Windows_NT')

steps:

  - script: |
      echo PATH1: %PATH%
      if exist "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\amd64" Set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\amd64;%PATH%;"
      nuget help
      msbuild /version
      echo PATH2: %PATH%
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'PATH?'

  - bash: |
      echo $BASH_VERSION
    displayName: 'Show'

  - powershell: |
       $ErrorActionPreference = "SilentlyContinue"
       
       $nuget = nuget help | select -First 1
       Write-Host "NUGET: $nuget"
       $msbuild = msbuild help | select -First 1
       Write-Host "MSBUILD: $msbuild"

       & dotnet --info
       "PATH: [" + [Environment]::GetEnvironmentVariable("PATH") + "]"
       & bash -c "Say ENVIRONMENT; printenv | sort"; $true

       pushd "C:\Program Files (x86)\Microsoft Visual Studio\"
       # & cmd /c dir /b /s
       popd
    displayName: 'system info (pwsh)'


  - powershell: |
       $Work="$($Env:LocalAppData)"; if ($Work -eq "") { $Work="$($Env:UserProfile)"; }; $Work="$Work\Temp\Sql-Installers"
       if (-not (Test-Path $Work)) { New-Item -ItemType Directory -Path $Work -EA SilentlyContinue | out-null }
       Write-Host "Downloading Bootstrap.ps1 to: $Work" -ForegroundColor Cyan
       (new-object System.Net.WebClient).DownloadFile('https://raw.githubusercontent.com/devizer/glist/master/bin/SQL-Express/Sql-Setup-Bootstrap.ps1', "$Work\Sql-Setup-Bootstrap.ps1")
       pushd $Work; . .\Sql-Setup-Bootstrap.ps1; popd

       Show-SqlServers

       $todo = Parse-SqlServers "SqlServer 2019 Developer: MSSQLSERVER"
       $todo | % { Install-SqlServer $_ }

       Show-SqlServers
       Say "ALL THE SERVICES"
       get-wmiobject win32_service | sort-object -Property "DisplayName" | ft State, Name, DisplayName, StartMode, StartName
    displayName: 'Prepare SQL Server'
  
  
  
  - script: |
      rem if exist "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\amd64" Set PATH="C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\amd64;%PATH%;"
      call 0-Rebuild-All.cmd
      call 1-Test-Universe.SqlInsights.SqlServerStorage.Tests.cmd
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'dotnet test on Windows'

